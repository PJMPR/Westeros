// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Westeros.Recipes.Data.Repositories;

namespace Westeros.Recipes.Data.Migrations
{
    [DbContext(typeof(RecipesDbContext))]
    [Migration("20181105133652_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Westeros.Recipes.Data.Ingridient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgPrice");

                    b.Property<double>("Calories");

                    b.Property<double>("Carbohydrates");

                    b.Property<int>("Category");

                    b.Property<double>("Fats");

                    b.Property<string>("Name");

                    b.Property<string>("PhotoPath");

                    b.Property<double>("Proteins");

                    b.Property<int?>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingridients");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("RecipeId");

                    b.HasKey("ID");

                    b.HasIndex("RecipeId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.DeviceRecipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeviceID");

                    b.Property<int>("RecipeID");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID");

                    b.HasIndex("RecipeID");

                    b.ToTable("DeviceRecipes");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.IngridientRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngridientId");

                    b.Property<int>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("IngridientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngridientRecipes");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calories");

                    b.Property<double>("Carbohydrates");

                    b.Property<int>("Cuisine");

                    b.Property<string>("Description");

                    b.Property<int>("Difficulty");

                    b.Property<double>("Fats");

                    b.Property<string>("Name");

                    b.Property<string>("PhotoPath");

                    b.Property<int>("PrepTime");

                    b.Property<string>("PriceBar");

                    b.Property<double>("Proteins");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Ingridient", b =>
                {
                    b.HasOne("Westeros.Recipes.Data.Recipe")
                        .WithMany("Ingridients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.Device", b =>
                {
                    b.HasOne("Westeros.Recipes.Data.Recipe")
                        .WithMany("Devices")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.DeviceRecipe", b =>
                {
                    b.HasOne("Westeros.Recipes.Data.Model.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Westeros.Recipes.Data.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Westeros.Recipes.Data.Model.IngridientRecipe", b =>
                {
                    b.HasOne("Westeros.Recipes.Data.Ingridient", "Ingridient")
                        .WithMany()
                        .HasForeignKey("IngridientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Westeros.Recipes.Data.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
